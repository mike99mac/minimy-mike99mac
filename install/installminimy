#!/bin/bash
#
# should be run from minimy base dir
# Example:
#     install/installminimy
#
#+--------------------------------------------------------------------------+
function runCmd
# run a command, report time spent and exit if it fails
#+--------------------------------------------------------------------------+
 {
  : SOURCE: ${BASH_SOURCE}
  : STACK:  ${FUNCNAME[@]}

  cmd="$@"                                 # get all args
  let stepNum=$stepNum+1
  echo | tee -a $logFile
  echo "Step $stepNum: $cmd ..." 2>&1 | tee -a $logFile # show the command and send to output file
  eval $cmd >> $logFile 2>&1               # run command and log output
  rc=$?
  if [ "$rc" != 0 ]; then                  # it failed
    echo "ERROR: $cmd returned $rc" | tee -a $logFile
    echo "Log file: $logFile"
    exit 1
  else
    echo "rc = 0"
  fi
  let curSecs=$SECONDS
  let et=$curSecs-$lastSecs
  echo "Step $stepNum took $et seconds" | tee -a $logFile
  lastSecs=$curSecs
 }                                         # runCmd()

#+--------------------------------------------------------------------------+
function checkEnv
# Check the environment
#+--------------------------------------------------------------------------+
 {
  : SOURCE: ${BASH_SOURCE}
  : STACK:  ${FUNCNAME[@]}

  if [ ! -d "$baseDir" ]; then
    echo "ERROR: base directory $baseDir not found"
    exit 2
  fi
 }                                         # runCmd()

#+--------------------------------------------------------------------------+
function doIt                              
# Build the virtual environment
#+--------------------------------------------------------------------------+
 {
  : SOURCE: ${BASH_SOURCE}
  : STACK:  ${FUNCNAME[@]}

  echo
  echo "Running $0 ..." > $logFile # create a new log file
  echo | tee -a $logFile
  echo "cd to $HOME/minimy ..." | tee -a $logFile
  cd $HOME/minimy
  echo | tee -a $logFile
  echo "Installing virtual environment ..." | tee -a $logFile
  runCmd sudo apt-get install python3-venv
  runCmd sudo apt-get install python3-dev
  runCmd python3 -m venv minimy_venv
  echo | tee -a $logFile
  echo "Upgrading pip ..." | tee -a $logFile
  local pipCmd="$HOME/minimy/minimy_venv/bin/pip" # use pip from the venv
  runCmd $pipCmd install --upgrade pip
  echo | tee -a $logFile
  echo "Activating virtual environment ..." | tee -a $logFile
  runCmd source minimy_venv/bin/activate          # start virtual environment
  echo | tee -a $logFile
  echo "Upgrading wheel and setuptools ..." | tee -a $logFile
  runCmd $pipCmd install --upgrade wheel setuptools
  runCmd sudo apt-get install -y python3-dev build-essential portaudio19-dev mpg123 ffmpeg curl wget
  runCmd sudo apt-get install -y libavutil-dev libswscale-dev libswresample-dev libavfilter-dev
  runCmd sudo apt-get install -y libavcodec-dev libavformat-dev libavdevice-dev 
  echo | tee -a $logFile

  echo "Installing yt-dlp and requirements.txt ..." | tee -a $logFile
  local pythonVer=`python -V | awk '{print $2}' | awk -F'.' '{print $1"."$2}'`
  local pythonCmd="$HOME/minimy/minimy_venv/bin/python$pythonVer" # use python from the venv
  runCmd $pythonCmd -m pip install --force-reinstall https://github.com/yt-dlp/yt-dlp/archive/master.tar.gz

  echo "Installing yt-dlp and requirements.txt ..." | tee -a $logFile
  cd $baseDir
  runCmd $pipCmd install -r install/requirements.txt

  echo "Installing local STT whisper" | tee -a $logFile
  runCmd $pipCmd install git+https://github.com/openai/whisper.git
  runCmd $pipCmd install datasets
  runCmd $pipCmd install gpiozero
  runCmd $pipCmd install keyboard
  runCmd $pipCmd install lgpio
  runCmd $pipCmd install lingua_franca
  runCmd $pipCmd install optimum
  runCmd $pipCmd install requests
  runCmd $pipCmd install quart
  runCmd $pipCmd install whisper
  runCmd $pipCmd install youtube-search
  runCmd $pipCmd install youtube-search-python
  runCmd $pipCmd install --upgrade --upgrade-strategy eager "optimum[neural-compressor]"
  echo | tee -a $logFile

  echo "Installing local ytplay/ytadd in /usr/local/sbin ..." | tee -a $logFile
  runCmd sudo cp install/ytplay /usr/local/sbin
  if [ ! -f /usr/local/sbin/ytadd ]; then
    runCmd sudo ln -s /usr/local/sbin/ytplay /usr/local/sbin/ytadd
  fi
  runCmd $pipCmd install youtube-search-python
  echo | tee -a $logFile
  echo "Deactivating virtual environment ..." | tee -a $logFile
  echo | tee -a $logFile
  cd $HOME/minimy/framework/services/intent/nlp/local
  #echo "ls -la cmu*" | tee -a $logFile
  #ls -la cmu* | tee -a $logFile
  #echo | tee -a $logFile

  echo "Building CMU link grammar ..." | tee -a $logFile
  runCmd tar xzf cmu_link-4.1b.tar.gz
  echo | tee -a $logFile
  echo "cd to link-4.1b ..." | tee -a $logFile
  cd link-4.1b
  runCmd make
  echo | tee -a $logFile

  echo "Installing Local STT ..."| tee -a $logFile
  echo | tee -a $logFile
  cd $baseDir/install
  echo "Loading the whisper model"
  source $HOME/minimy/minimy_venv/bin/activate # start the venv
  runCmd $pythonCmd $baseDir/bldwhisper.py $baseDir/jfk.wav # build the base.en model
  deactivate                                   # stop the venv

  echo "Installing Local TTS ..."| tee -a $logFile
  echo | tee -a $logFile
  cd $baseDir/framework/services/tts/local
  echo "Running command: wget http://rioespana.com/images/mimic3.tgz" | tee -a $logFile
  runCmd wget http://rioespana.com/images/mimic3.tgz
  runCmd tar xzf mimic3.tgz
  cd mimic3
  runCmd make install
  cd $HOME/minimy
  runCmd source framework/services/tts/local/mimic3/.venv/bin/activate
  runCmd $pipCmd install importlib-resources
  runCmd deactivate
  echo | tee -a $logFile

  echo "Copying and enabling systemd .mount and .service files ..." | tee -a $logFile 
  runCmd sudo cp install/home-pi-minimy-logs.mount /etc/systemd/system 
  runCmd sudo systemctl enable home-pi-minimy-logs.mount 
  runCmd sudo cp install/home-pi-minimy-tmp.mount /etc/systemd/system 
  runCmd sudo systemctl enable home-pi-minimy-tmp.mount 
  runCmd sudo cp install/minimy.service /etc/systemd/system 
  runCmd sudo systemctl enable minimy
  echo | tee -a $logFile
  echo "Copying Minimy scripts to /usr/local/sbin ..."| tee -a $logFile
  minimyScripts="startminimy stopminimy restartminimy grm cmpcode countminimy minimyver test_ws.py"
  echo | tee -a $logFile
  echo "cd to $HOME/minimy/install ..." | tee -a $logFile
  cd $HOME/minimy/install
  runCmd sudo cp $minimyScripts /usr/local/sbin 
  echo | tee -a $logFile
  echo "cd to /usr/local/sbin ..." | tee -a $logFile
  cd /usr/local/sbin
  runCmd sudo chown $USER:$USER $minimyScripts
  runCmd sudo cp $HOME/minimy/install/great_songs.m3u /var/lib/mpd/playlists
  echo | tee -a $logFile
  echo "Starting virtual environment ..." | tee -a $logFile
  source $HOME/minimy/minimy_venv/bin/activate
  echo " "
  echo "Install Complete at `date`" | tee -a $logFile
 }                                         # doIt()

# main()
baseDir="$HOME/minimy"
let lastSecs=$SECONDS
timeStamp=`date +"%y-%m-%d-%H-%M-%S"`
logFile="$HOME/$timeStamp-install.out"     # output file
let stepNum=0
timeStamp=`date +"%y-%m-%d-%H-%M-%S"`   

checkEnv                                   # check the environment
doIt                                       # do the work
let min=$SECONDS/60
let sec=$SECONDS%60
if [ $sec -lt 10 ]; then                   # add a leading 0
  sec="0$sec"
fi
echo "Successfully installed Minimy in $min:$sec" | tee -a $logFile
echo "Log file: $logFile"

